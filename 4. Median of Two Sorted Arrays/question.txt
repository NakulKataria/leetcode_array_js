Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).
found more optimized approch on leetcode

/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number}
 */
var findMedianSortedArrays = function(nums1, nums2) {
    let n1 = nums1.length, n2 = nums2.length;
    let n = n1+n2;
    if(n1>n2) return findMedianSortedArrays(nums2,nums1);
    let low = 0, high = n1;
    let left = Math.floor((n1+n2+1)/2);
    while(low<=high){
        let mid1 = Math.floor(low + (high-low)/2);
        let mid2 = left - mid1;//not computing left again and againlike me
        let l1 = -Infinity, l2 = -Infinity;//initaize hi infinity se kr diya ek if bloc kam use hua or bar bar nhi chala
        let r1 = Infinity, r2 = Infinity;
        if(mid1<n1) r1 = nums1[mid1];
        if(mid2<n2) r2 = nums2[mid2];
        if((mid1-1)>=0) l1 = nums1[mid1-1];
        if((mid2-1)>=0) l2 = nums2[mid2-1];
        if(l1<=r2 && l2<=r1){
            if(n%2==0) return (Math.max(l1,l2) + Math.min(r1,r2))/2;
            else return Math.max(l1,l2);
        }
        if(l1>r2) high = mid1-1;
        else low = mid1+1;
    }
    return 0;


    2 major diffrence h if block kam kiya loop m se or bar bar left compute nhi kiya